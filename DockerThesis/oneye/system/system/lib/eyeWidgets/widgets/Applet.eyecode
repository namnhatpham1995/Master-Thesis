<?php
/*
  ___  _ __   ___ _   _  ___
 / _ \| '_ \ / _ \ | | |/ _ \
| (_) | | | |  __/ |_| |  __/
 \___/|_| |_|\___|\__, |\___|
                  |___/

oneye is released under the GNU Affero General Public License Version 3 (AGPL3)
 -> provided with this release in license.txt
 -> or via web at www.gnu.org/licenses/agpl-3.0.txt

Copyright © 2005 - 2010 eyeos Team (team@eyeos.org)
             since 2010 Lars Knickrehm (mail@lars-sh.de)
*/

class Applet {
	//pid controller

	var $creatorPid;

	//global widgets options without default
	var $name;
	var $father;

	//generic widget options with default
	var $x;
	var $y;
	var $horiz;
	var $vert;
	var $cent;

	var $showed = 0;

	//custom widget options
	var $codebase;
	var $visible;
	var $width;
	var $height;
	var $appletParamsNames;
	var $appletParamsValues;
	//constructor
	function __construct($params) {
		global $myPid;
		$this->creatorPid = $myPid;
		//generic widget options without default
		$this->name = $params['name'];
		isset($params['father']) ? $this->father = $params['father'] : $this->father = 'eyeApps';
		//generic widget options with default
		isset($params['horiz']) ? $this->horiz = $params['horiz'] : $this->horiz = 0;
		isset($params['vert']) ? $this->vert = $params['vert'] : $this->vert = 0;
		isset($params['cent']) ? $this->cent = $params['cent'] : $this->cent = 0;
		isset($params['x']) ? $this->x = $params['x'] : $this->x = 20;
		isset($params['y']) ? $this->y = $params['y'] : $this->y = 20;
		//especific options
		isset($params['codebase']) ? $this->src = $params['src'] : $this->src = "";
		isset($params['visible']) ? $this->visible = $params['visible'] : $this->visible = 1;
		isset($params['width']) ? $this->width = $params['width'] : $this->width = -1;
		isset($params['height']) ? $this->height = $params['height'] : $this->height = -1;

		if(isset($params['appletParamsNames']) || isset($params['appletParamsValues'])){
			//Every value needs a name
			if(count($params['appletParamsNames']) != count($params['appletParamsValues'])){
				$this->appletParamsNames = "";
				$this->appletParamsValues = "";
			}else{
				$this->appletParamsNames = $params['appletParamsNames'];
				$this->appletParamsValues = $params['appletParamsValues'];
			}
		}
	}

	//widget show method, send a createWidget message

	function show($noserialize=1) {
		global $myPid;
		if(is_array($this->appletParamsNames) && is_array($this->appletParamsValues)){
			$appletParamsNames =mmap('array2jsArg',array($this->appletParamsNames,1));
			$appletParamsValues =mmap('array2jsArg',array($this->appletParamsValues,1));
		}else{
			$appletParamsNames = '';
			$appletParamsValues ='';
		}
		$widgetsparams = array(
			'codebase' => $this->codebase,
			'visible' => $this->visible,
			'width' => $this->width,
			'height' => $this->height,
			'appletParamsNames' => $appletParamsNames,
			'appletParamsValues'=>$appletParamsValues
		);
		$widgetsparams = mmap('array2js',array($widgetsparams));

		$myApplet = array(
			'name' => $this->name,
			'x' => $this->x,
			'y' => $this->y,
			'horiz' => $this->horiz,
			'vert' => $this->vert,
			'father' => $this->father,
			'widgetname' => 'Applet',
			'params' => $widgetsparams,
			'center' => $this->cent
		);
		eyex('createWidget',$myApplet);
		$this->showed=1;
		if($noserialize == 0) {
			eyeWidgets('serialize',array($this));
		}
	}

	//event handling
	function addEvent($eventName,$eventFunc,$args='') {
		global $myPid;
		$myname = $myPid.'_'.$this->name.'_Container';
		if($this->showed == 0) {
			$this->show();
		}
		eyex('addEvent',array('name' => $myname, 'action' => $eventFunc, 'event' => $eventName,'args'=>$args));
	}

	function setCss($params) {
		global $myPid;
		if(is_array($params)) {
			foreach($params as $key => $value) {
				eyex('updateCss',array('name' => $myPid.'_'.$this->name,'property' => $key,'value' => $value));
			}
		}
	}

	//set properties functions.
	function hide() {
		global $myPid;
		$this->visible = 0;
		eyex('rawjs',array('js' => 'document.getElementById("'.$myPid.'_'.$this->name.'_Container").style.display="none"'));
	}

	function setWidth($width) {
		global $myPid;
		$this->width = intval($width);
		eyex('rawjs',array('js' => 'document.getElementById("'.$myPid.'_'.$this->name.'_Container").style.width="'.$this->width.'px";'));
		eyex('rawjs',array('js' => 'document.getElementById("'.$myPid.'_'.$this->name.'").style.width="'.$this->width.'px";'));
	}

	function setHeight($height) {
		global $myPid;
		$this->height = intval($height);
		eyex('rawjs',array('js' => 'document.getElementById("'.$myPid.'_'.$this->name.'").style.height="'.$this->height.'px";'));
		eyex('rawjs',array('js' => 'document.getElementById("'.$myPid.'_'.$this->name.'_Container").style.height="'.$this->height.'px";'));
	}

	function setX($x) {
		global $myPid;
		$this->x = intval($x);
		eyex('rawjs',array('js' => 'document.getElementById("'.$myPid.'_'.$this->name.'_Container").style.left="'.$this->x.'px";'));
	}

	function setY($y) {
		global $myPid;
		$this->y = intval($y);
		eyex('rawjs',array('js' => 'document.getElementById("'.$myPid.'_'.$this->name.'_Container").style.top="'.$this->y.'px";'));
	}

	function remove() {
		global $myPid;
		$name = $this->name.'_Container';
		eyex('removeWidget',array('name'=>$name));
		eyeWidgets('singleUnserialize',array($this->name));
	}
}

?>