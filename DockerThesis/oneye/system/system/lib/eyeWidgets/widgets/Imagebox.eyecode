<?php
/*
  ___  _ __   ___ _   _  ___
 / _ \| '_ \ / _ \ | | |/ _ \
| (_) | | | |  __/ |_| |  __/
 \___/|_| |_|\___|\__, |\___|
                  |___/

oneye is released under the GNU Affero General Public License Version 3 (AGPL3)
 -> provided with this release in license.txt
 -> or via web at www.gnu.org/licenses/agpl-3.0.txt

Copyright Â© 2005 - 2010 eyeos Team (team@eyeos.org)
             since 2010 Lars Knickrehm (mail@lars-sh.de)
*/

/*
	Button widget abstraction
*/

class Imagebox {
	//pid controller

	var $creatorPid;

	//global widgets options without default
	var $name;
	var $father;

	//generic widget options with default
	var $x;
	var $y;
	var $horiz;
	var $vert;
	var $cent;

	var $showed = 0;

	//custom widget options
	var $url;
	var $visible;
	var $alt;
	var $width;
	var $height;
	var $myClass;

	//friends abstraction
	var $friends="''";

	//event handling
	var $disableMsg = 0;
	var $signal;

	//constructor
	function __construct($params) {
		global $myPid;
		$this->creatorPid = $myPid;
		//generic widget options without default
		$this->name = $params['name'];
		isset($params['father']) ? $this->father = $params['father'] : $this->father = 'eyeApps';

		//generic widget options with default
		isset($params['horiz']) ? $this->horiz = $params['horiz'] : $this->horiz = 0;
		isset($params['vert']) ? $this->vert = $params['vert'] : $this->vert = 0;
		isset($params['cent']) ? $this->cent = $params['cent'] : $this->cent = 0;
		isset($params['x']) ? $this->x = $params['x'] : $this->x = 20;
		isset($params['y']) ? $this->y = $params['y'] : $this->y = 20;
		//especific button options
		isset($params['url']) ? $this->url = $params['url'] : $this->url = 0; //TODO: PUT A DEFAULT IMAGE
		isset($params['visible']) ? $this->visible = $params['visible'] : $this->visible = 1;
		isset($params['alt']) ? $this->alt = $params['alt'] : $this->alt = '';
		isset($params['width']) ? $this->width = $params['width'] : $this->width = -1;
		isset($params['height']) ? $this->height = $params['height'] : $this->height = -1;
		isset($params['cssClass']) ? $this->myClass = $params['cssClass'] : $this->myClass = '';
		isset($params['disableMsg']) ? $this->disableMsg = $params['disableMsg'] : $this->disableMsg = 1;
		isset($params['signal']) ? $this->signal = $params['signal'] : $this->signal = $this->name;
		if ($this->cent || /* utf8 */ stripos($this->url, 'extern=') !== false && IE > 0 && IE < 7) {
			$info = @getimagesize(eyex('getThemeImage',array($this->url,3)));
			if (!$this->width || $this->width == -1) {
				$this->width = $info[0];
			}
			if (!$this->height || $this->height == -1) {
				$this->height = $info[1];
			}
		}
	}

	//widget show method, send a createWidget message
	function show($noserialize=1) {
		$widgetsparams = array(
			'url' => $this->url,
			'visible' => $this->visible,
			'alt' => $this->alt,
			'width' => $this->width,
			'height' => $this->height,
			'cssClass' => $this->myClass,
			'signal' => $this->signal,
			'disableMsg' => $this->disableMsg,
			'sync' => $this->friends
		);
		$widgetsparams = mmap('array2js',array($widgetsparams));

		$myButton = array(
			'name' => $this->name,
			'x' => $this->x,
			'y' => $this->y,
			'horiz' => $this->horiz,
			'vert' => $this->vert,
			'father' => $this->father,
			'widgetname' => 'Imagebox',
			'params' => $widgetsparams,
			'center' => $this->cent
		);
		eyex('createWidget',$myButton);
		$this->showed=1;
		if($noserialize == 0) {
			eyeWidgets('serialize',array($this));
		}
	}


	//event handling
	function addEvent($eventName,$eventFunc,$args='') {
		global $myPid;
		$myname = $myPid.'_'.$this->name.'_Container';
		if($this->showed == 0) {
			$this->show();
		}
		eyex('addEvent',array('name' => $myname, 'action' => $eventFunc, 'event' => $eventName,'args'=>$args));
	}

	//friends handler
	function addFriend($friend) {
		if(method_exists($friend,'getSyncString')) {
			if($this->friends == "''") {
				$this->friends = $friend->getSyncString();
			} else {
				$this->friends .= '+'.$friend->getSyncString();
			}
		}
	}

	function setCss($params) {
		global $myPid;
		if(is_array($params)) {
			foreach($params as $key => $value) {
				eyex('updateCss',array('name' => $myPid.'_'.$this->name,'property' => $key,'value' => $value));
			}
		}
	}

	//set properties functions.

	function hide() {
		global $myPid;
		$this->visible = 0;
		eyex('rawjs',array('js' => 'document.getElementById("'.$myPid.'_'.$this->name.'_Container").style.display="none"'));
	}

	function unhide() {
		global $myPid;
		$this->visible = 1;
		eyex('rawjs',array('js' => 'document.getElementById("'.$myPid.'_'.$this->name.'_Container").style.display="block"'));
	}

	function setUrl($newUrl) {
		global $myPid;
		$this->url = $newUrl;
		$tokens[] = $this->url;
		eyex('runjs',array('js' => 'document.getElementById("'.$myPid.'_'.$this->name.'").src= %s ','tokens'=>$tokens));
	}

	function setWidth($width) {
		global $myPid;
		$this->width = intval($width);
		eyex('rawjs',array('js' => 'document.getElementById("'.$myPid.'_'.$this->name.'_Container").style.width="'.$this->width.'px";'));
		eyex('rawjs',array('js' => 'document.getElementById("'.$myPid.'_'.$this->name.'").style.width="'.$this->width.'px";'));
	}

	function setHeight($height) {
		global $myPid;
		$this->height = intval($height);
		eyex('rawjs',array('js' => 'document.getElementById("'.$myPid.'_'.$this->name.'").style.height="'.$this->height.'px";'));
		eyex('rawjs',array('js' => 'document.getElementById("'.$myPid.'_'.$this->name.'_Container").style.height="'.$this->height.'px";'));
	}

	function setX($x) {
		global $myPid;
		$this->x = intval($x);
		eyex('rawjs',array('js' => 'document.getElementById("'.$myPid.'_'.$this->name.'_Container").style.left="'.$this->x.'px";'));
	}

	function setY($y) {
		global $myPid;
		$this->y = intval($y);
		eyex('rawjs',array('js' => 'document.getElementById("'.$myPid.'_'.$this->name.'_Container").style.top="'.$this->y.'px";'));
	}

	function remove() {
		global $myPid;
		$name = $this->name.'_Container';
		eyex('removeWidget',array('name'=>$name));
		eyeWidgets('singleUnserialize',array($this->name));
	}
}

?>