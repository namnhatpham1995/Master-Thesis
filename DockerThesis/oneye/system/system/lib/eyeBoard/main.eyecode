<?php
/*
  ___  _ __   ___ _   _  ___
 / _ \| '_ \ / _ \ | | |/ _ \
| (_) | | | |  __/ |_| |  __/
 \___/|_| |_|\___|\__, |\___|
                  |___/

oneye is released under the GNU Affero General Public License Version 3 (AGPL3)
 -> provided with this release in license.txt
 -> or via web at www.gnu.org/licenses/agpl-3.0.txt

Copyright Â© 2005 - 2010 eyeos Team (team@eyeos.org)
             since 2010 Lars Knickrehm (mail@lars-sh.de)
*/

/*
	Error code library for oneye
*/

function lib_eyeBoard_getMessages($params=null) {
	$msg = getConfig('eyeBoard','conf.xml');
	$ret = array();
	if(isset($msg['messages'][0]['message']) && is_array($msg['messages'][0]['message'])) {
		foreach($msg['messages'][0]['message'] as $value) {
			$ret[] = array($value['author'][0],$value['content'][0],$value['time'][0]);
		}
	}
	return $ret;
}

function lib_eyeBoard_getMessagesHtml($params=null) {
	global $checknum;
	global $currentUser;
	$msg = getConfig('eyeBoard','conf.xml');
	$conf = eyeXML('getXMLconfig',array('eyeBoard','conf.xml'));
	if (is_numeric($conf['eyeBoard'][0]['reloadTime'][0])) {
		$reloadTime = round($conf['eyeBoard'][0]['reloadTime'][0],3) * 1000;
	} else {
		$reloadTime = 5000;
	}
	$ret = "<script>setTimeout('location.reload();'," . $reloadTime . "); function newMessage(user) { window.parent.sendMsg(" . $checknum . ", 'newMessage', window.parent.eyeParam('to', user)); }</script>";
	if(isset($msg['messages'][0]['message']) && is_array($msg['messages'][0]['message'])) {
		foreach($msg['messages'][0]['message'] as $value) {
			$author = $value['author'][0];
			if ($conf['eyeBoard'][0]['showFullname'][0] == '1') {
				$oldUser = $currentUser;
				$currentUser = ROOTUSER;
				$authorXML = um('retrieveUser',array($author));
				$currentUser = $oldUser;
				if (utf8_strlen($authorXML['eyeUser'][0]['fullname'][0]) >= 2 && utf8_strlen($authorXML['eyeUser'][0]['fullname'][0]) <= MAX_USERNAME_LEN) {
					$author = $authorXML['eyeUser'][0]['fullname'][0];
				}
			}
			$content = $value['content'][0];
			$time = $value['time'][0];
			$ret .= "
			<div onclick=\"newMessage('" . $value['author'][0] . "');\" onmouseover=\"this.style.backgroundColor = '#eeeeee';\" onmouseout=\"this.style.backgroundColor = null;\" style='cursor: pointer; font-family: sans-serif, Verdana; text-align: justify; line-height: 1.7; font-size: 11px; color:#000; margin: 0; margin-top: 10px; border-bottom: 1px solid #bbd6f7;'>
				".utf8_htmlentities($content, ENT_QUOTES)."
				<div style='font-family: sans-serif, Verdana; color: #3967a4; text-align: right; font-size: 9px; margin-bottom: 4px; margin-top: 4px;'>
					<strong>" . $author . "</strong> | <strong>".date('Y-m-d G:i:s',$time)."</strong>
				</div>
			</div>";
		}
	}
	return $ret;
}

function lib_eyeBoard_newMessage($params=null) {
	if(!isset($params[0])){
		errorCodes('setErrorCode',array(INCORRECT_PARAMS));
		return false;
	}
	global $currentUser;
	$content = $params[0];

	if (utf8_strlen($content) > 300) {
		$content = utf8_substr($content, 0, 300);
	}
	$time = time();
	$myMessage = array('author'=>array($currentUser),'content'=>array($content),'time'=>array($time));
	$msg = getConfig('eyeBoard','conf.xml');

	if(isset($msg['messages'][0]['message']) && is_array($msg['messages'][0]['message'])) {
		array_unshift($msg['messages'][0]['message'],$myMessage);
	} else {
		$msg['messages'][0] = array('message'=>array($myMessage));
	}

	$xml = eyeXML('array2xml',array($msg));
	$oldUser = $currentUser;
	$currentUser = ROOTUSER;
	$fp = vfs('real_open',array(EYE_ROOT.'/'.APP_DIR.'/'.APP_CONF_SHARE.'/eyeBoard/conf.xml','w'));
	$currentUser = $oldUser;
	fwrite($fp,$xml);
	fclose($fp);
	return true;
}

function lib_eyeBoard_clear($params=null) {
	global $currentUser;
	if($currentUser == ROOTUSER) {
		$fp = vfs('real_open',array(EYE_ROOT.'/'.APP_DIR.'/'.APP_CONF_SHARE.'/eyeBoard/conf.xml','w'));
		fwrite($fp,"<messages />");
		fclose($fp);
		return true;
	}
	return false;
}
?>