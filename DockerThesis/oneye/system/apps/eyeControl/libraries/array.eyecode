<?php
/*
  ___  _ __   ___ _   _  ___
 / _ \| '_ \ / _ \ | | |/ _ \
| (_) | | | |  __/ |_| |  __/
 \___/|_| |_|\___|\__, |\___|
                  |___/

oneye is released under the GNU Affero General Public License Version 3 (AGPL3)
 -> provided with this release in license.txt
 -> or via web at www.gnu.org/licenses/agpl-3.0.txt

Copyright © 2005 - 2010 eyeos Team (team@eyeos.org)
             since 2010 Lars Knickrehm (mail@lars-sh.de)
*/

function eyeControl_lib_findIdByText($params) {
	$array = $params[0];
	$text = $params[1];
	$path = $params[2];
	$type = $params[3];
	if (!$array || !$text || !is_array($array)) {
		errorCodes('setErrorCode',array(INCORRECT_PARAMS));
		return false;
	}
	$x = 0;
	$return = array();
	foreach($array as $secArray) {
		if (is_array($path)) {
			foreach($path as $pathNow) {
				$secArray = $secArray[$pathNow];
			}
		}
		if ($secArray != $text && $type == 2) {
			$return[] = $x;
		} elseif ($secArray == $text && $type != 2) {
			$return[] = $x;
		}
		$x++;
	}
	return $return;
}

function eyeControl_lib_findArrayByText($params) {
	$array = $params[0];
	$text = $params[1];
	$path = $params[2];
	$type = null;
	if (isset($params[3]) === true) {
		$type = $params[3];
	}
	if (!$array || !$text || !is_array($array)) {
		errorCodes('setErrorCode',array(INCORRECT_PARAMS));
		return false;
	}
	$x = 0;
	$return = array();
	foreach($array as $secArray) {
		$secText = $secArray;
		if (is_array($path)) {
			foreach($path as $pathNow) {
				if (isset($secText[$pathNow]) === false) {
					$secText = false;
				} else if ($secText !== false) {
					$secText = $secText[$pathNow];
				}
			}
		}
		if ($secText != $text && $type == 2) {
			$return[] = $secArray;
		} elseif ($secText == $text && $type != 2) {
			$return[] = $secArray;
		}
		$x++;
	}
	return $return;
}
?>