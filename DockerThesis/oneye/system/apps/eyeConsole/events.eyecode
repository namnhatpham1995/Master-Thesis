<?php
/*
  ___  _ __   ___ _   _  ___
 / _ \| '_ \ / _ \ | | |/ _ \
| (_) | | | |  __/ |_| |  __/
 \___/|_| |_|\___|\__, |\___|
                  |___/

oneye is released under the GNU Affero General Public License Version 3 (AGPL3)
 -> provided with this release in license.txt
 -> or via web at www.gnu.org/licenses/agpl-3.0.txt

Copyright © 2005 - 2010 eyeos Team (team@eyeos.org)
             since 2010 Lars Knickrehm (mail@lars-sh.de)
*/

function eyeConsole_on_Close($params=null) {
	proc('end');
}

function eyeConsole_on_Resize($params=null) {
	$width = $params['arg'][0];
	$height = $params['arg'][1];
	$GLOBALS['cmd']->setWidth($width-80);
	$GLOBALS['consoleOutput']->setWidth($width-25);
	$GLOBALS['consoleOutput']->setHeight($height-44);
}

function eyeConsole_on_sendCmd($params=null) {
	$cmd = $GLOBALS['cmd']->text;
	$GLOBALS['cmd']->setText("");
	$arguments = parseArguments($cmd);
	$myApp = $arguments[0];
	array_shift($arguments);
	eyeX('print',array('oneye> '.$cmd));
	if(!proc('launch',array($myApp,$arguments))) {
		eyeX('print',array("Command not found"));
	}
}

//steal from eyeLaunch
function parseArguments($myApp){
/*Remplacing escaped quotes and spaces
 *
 * We can do it with a conditional in a regexp, but i decide dot it because more programers
 * don't know more abou regexp.
 *
 * First remplace \" and \ for unique number.
 * Then, apply the regexp for extract every quoted text "text here"
 * and then, split the text.
 */
 
 //Remplace scaped chars with a rand string
	if ( /* utf8 */ strpos($myApp, '\"') !== false) {
		//remplace
		$quoteRemplace = /* utf8 */ substr(uniqid(rand()), 0, 8);
		$myApp = str_replace('\"',$quoteRemplace,$myApp);
	}
	// Replacing escaped spaces
	if ( /* utf8 */ strpos($myApp, '\ ') !== false) {
		//remplace
		$quoteRemplace = /* utf8 */ substr(uniqid(rand()), 0, 8);
		$myApp = str_replace('\ ',$quoteRemplace,$myApp);
	}

	$items = array();
//Getting the name if it is a quoted string.
	if ($myApp[0] === '"') {
		/* utf8 */ preg_match('/".+"/U', $myApp, $appName);
		//Removing from myApp string
		$myApp = str_replace($appName[0],'',$myApp);
		//Removing the quotes
		$appName = str_replace('"','',$appName[0]);
		$items[0] = $appName;
	}else{
		if ( /* utf8 */ strpos($myApp, ' ') !== false) {
			$appName = substr($myApp, 0, strpos($myApp, ' ')); // utf8
			$myApp = str_replace($appName,'',$myApp);
			$items[0] = $appName;
		}else{
			$appName = $myApp;
			$items[0] = $appName;
			return $items;
		}

	}

//Getting quoted arguments
	$con = array();
	/* utf8 */ preg_match_all('/".+"/U', $myApp, $con);
	foreach ($con[0] as $quotedString){
		//First delete it from myApp string
		$myApp = str_replace($quotedString,'',$myApp);
		//Add word without quotes to items
		$quotedString = str_replace('"','',$quotedString);
		//Add it to items array
		$items[] = $quotedString;
	}
//Getting rest of arguments
	/* utf8 */ preg_match_all('/ .+ /U', $myApp, $rest);
	foreach($rest[0] as $argument){
		$myApp = str_replace($argument,'',$myApp);
		$items[] = /* utf8 */ trim($argument);
	}

//The last argument if it exists
	$items[] = /* utf8 */ trim($myApp);
	return $items;
}

?>