<?php
/*
  ___  _ __   ___ _   _  ___
 / _ \| '_ \ / _ \ | | |/ _ \
| (_) | | | |  __/ |_| |  __/
 \___/|_| |_|\___|\__, |\___|
                  |___/

oneye is released under the GNU Affero General Public License Version 3 (AGPL3)
 -> provided with this release in license.txt
 -> or via web at www.gnu.org/licenses/agpl-3.0.txt

Copyright Â© 2005 - 2010 eyeos Team (team@eyeos.org)
             since 2010 Lars Knickrehm (mail@lars-sh.de)
*/

function eyeNav_lib_ShowBookmarks($params = array()) {
	global $myPid;

	$url = '<none>';
	$xml = eyeXML('getXMLconfig',array('eyeNav','conf.xml'));
	$xml['eyeNav'][0]['sidebar'][0] = 1;
	eyeXML('setXMLconfig',array('eyeNav','conf.xml',$xml));
	if ($params['arg'][0]) {
		$url = um('getCurrentUserDir') . '/' . FILES_USER_DIR . '/' . $params['arg'][0];
		$xml = eyeXML('getXMLfile',array(vfs('getRealName',array($url))));
		if (!$xml['eyeNav'][0]['bookmarks'][0] || !is_array($xml['eyeNav'][0]['bookmarks'][0])) {
			eyex('messageBox',array('content' => 'The selected file is not a valid eyeNav bookmarks file!'));
			return;
		}
	}

	if (is_object($GLOBALS['eyeNav_hidden_search_url'])) {
		$GLOBALS['eyeNav_hidden_search_url']->setText('none');
	}
	if (is_object($GLOBALS['eyeNav_box'])) {
		$GLOBALS['eyeNav_box']->remove();
	}

	$myContainer = new Container(array(
		'father' => 'eyeNav_window_box',
		'height' => 0,
		'name' => 'eyeNav_box',
		'width' => 140,
		'x' => 0,
		'y' => 0
	));
	$myContainer->show();
	eyeWidgets('serialize',array($myContainer));
	$myContainer->setCss(array(
		'direction' => 'ltr'
	));
	eyex('rawjs',array('js' => 'document.getElementById("' . $myPid . '_eyeNav_window_box_Content").style.top = "0";'));

	if (!is_object($GLOBALS['eyeNav_hidden_bookmarks_url'])) {
		// $myHidden
		$myHidden = new Hidden(array(
			'father' => 'eyeNav_box',
			'name' => 'eyeNav_hidden_bookmarks_url',
			'text' => $url
		));
		$myHidden->show();
		eyeWidgets('serialize',array($myHidden));
	} else {
		$GLOBALS['eyeNav_hidden_bookmarks_url']->setText($url);
	}

	$x = 1;
	$boxY = 25;

	if (!is_object($GLOBALS['selectedBookmarkId_HID'])) {
		$myHidden = new Hidden(array(
			'name' => 'selectedBookmarkId_HID',
			'father' => 'eyeNav_box',
			'text' => ''
		));
		eyeWidgets('serialize',array($myHidden));
	}
	// add for new bookmarks
	eyeNav_lib_refreshTree();


}
function eyeNav_lib_refreshTree() {
	if (is_object($GLOBALS['nav_TREE'])) {
		$GLOBALS['nav_TREE']->remove();
	}
	$xml = eyeXML('getXMLconfig',array('eyeNav','conf.xml'));
	$myTree = new Tree(array(
		'name' => 'nav_TREE',
		'father' => 'eyeNav_box',
		'x' => 0,
		'y' => 0,
		'width' => 130,
		'clickTree' => 1
	));
	$myTree->show(0);
	$myTree->addItem('nav_TREE', 'nav_TREE_root', i18n('translate',array($xml['eyeNav'][0]['bookmarks'][0]['title'][0])));
	$myTree->addSubList('nav_TREE_root', 'nav#folder_root');
	eyeNav_lib_addContextMenu('#menu_nav_TREE_root','nav_TREE_root', true);
	eyeNav_lib_fillBookmarks($xml['eyeNav'][0]['bookmarks'][0],'nav#folder_root');
	$myTree->processList();
	$myTree->expandTree();
}

function eyeNav_lib_fillBookmarks($xml,$folder) {
	if (is_array($xml['bookmark'])) {
		foreach ($xml['bookmark'] as $bookmark) {
			if ($bookmark['type'][0] == 'folder') {
				$GLOBALS['nav_TREE']->addItem($folder,'nav#item_'.$bookmark['id'][0],$bookmark['name'][0]);
				$GLOBALS['nav_TREE']->addSubList('nav#item_'.$bookmark['id'][0],'nav#folder_'.$bookmark['id'][0]);
				eyeNav_lib_addContextMenu('#foldermenu_nav_'.$bookmark['id'][0],'nav#item_'.$bookmark['id'][0]);
				eyeNav_lib_fillBookmarks($bookmark,'nav#folder_'.$bookmark['id'][0]);
			} else {
				$GLOBALS['nav_TREE']->addItem($folder,'nav#item_'.$bookmark['id'][0],$bookmark['name'][0]);
				eyeNav_lib_addContextMenu('#menu_nav_'.$bookmark['id'][0],'nav#item_'.$bookmark['id'][0]);
			}
		}
	}
}

function eyeNav_lib_getUrl($xml,$id) {
	foreach ($xml['bookmark'] as $bookmark) {
		if (($bookmark['type'][0] == 'url') && ($id == $bookmark['id'][0])) {
			return $bookmark['url'][0];
		} else {
			eyeNav_lib_getUrl($bookmark,$id);
		}
	}
}

function eyeNav_lib_addContextMenu($menuName, $nodeName, $addOnly=false) {
	$BookmarkId = /* utf8 */ substr($nodeName, 9);

	$myMenu = new ContextMenu(array(
		'name' => $menuName,
		'father' => $nodeName,
		'searchFather' => 1
	));
	$myMenu->show();

	$myMenu->addEntry(
		'<img id="' . $menuName . 'addnav_menu" style="height: 16px; width: 16px;" src="index.php?theme=' . $_SESSION['usertheme'] . '&amp;extern=icons/16x16/plus.png" /> &nbsp; '.utf8_htmlspecialchars(i18n('translate',array('Add bookmark')), ENT_QUOTES),
		'nav_addBookmark',
		'nav_addBookmark',
		$BookmarkId,
		$menuName . 'addbookmark_menu'
	);

	$myMenu->addEntry(
		'<img id="' . $menuName . 'addfolder_menu" style="height: 16px; width: 16px;" src="index.php?extern=apps/eyeFeeds/gfx/addfolder_menu.png" /> &nbsp; '.utf8_htmlspecialchars(i18n('translate',array('Add folder')), ENT_QUOTES),
		'nav_addFolder',
		'nav_addFolder',
		$BookmarkId,
		$menuName . 'addfolder_menu'
	);
	
	if (!$addOnly) {

		$myMenu->addEntry(
			'<img id="' . $menuName . 'editnavfolder_menu" style="height: 16px; width: 16px;" src="index.php?theme=' . $_SESSION['usertheme'] . '&amp;extern=icons/16x16/edit.png" /> &nbsp; '.utf8_htmlspecialchars(i18n('translate',array('Edit')), ENT_QUOTES),
			'nav_edit',
			'nav_edit',
			$BookmarkId,
			$menuName . 'editbookmarkfolder_menu'
		);

		$myMenu->addEntry(
			'<img id="' . $menuName . 'delnavfolder_menu" style="height: 16px; width: 16px;" src="index.php?theme=' . $_SESSION['usertheme'] . '&amp;extern=icons/16x16/delete.png" /> &nbsp; '.utf8_htmlspecialchars(i18n('translate',array('Delete')), ENT_QUOTES),
			'nav_del',
			'nav_del',
			$BookmarkId,
			$menuName . 'delbookmarkfolder_menu'
		);

		$myMenu->addEntry(
			'<img id="' . $menuName . 'asApp_menu" style="height: 16px; width: 16px;" src="index.php?theme=' . $_SESSION['usertheme'] . '&amp;extern=icons/16x16/exec.png" /> &nbsp; '.utf8_htmlspecialchars(i18n('translate',array('Open As App')), ENT_QUOTES),
			'nav_asApp',
			'nav_asApp',
			$BookmarkId,
			$menuName . 'asApp_menu'
		);
	}
}

function eyeNav_on_nav_asApp($params=null,$theurl = null) {
	eyeNav_prepareForModalDialog();
	global $myPid;
	$GLOBALS['selectedBookmarkId_HID']->setText($params);
	$GLOBALS['nav_TREE']->selectItem('nav#item_'.$params);
	
	$xml = eyeXML('getXMLconfig',array('eyeNav','conf.xml'));
	$xml = $xml['eyeNav'][0]['bookmarks'][0]['bookmark'];
	$bookmark = eyeNav_getBookmarkFromId($xml,$params);

	proc('launch',array('eyeIframize',$bookmark['url'][0]));
}

function eyeNav_on_nav_addBookmark($params=null,$theurl = null) {
	eyeNav_prepareForModalDialog();
	global $myPid;
	$GLOBALS['selectedBookmarkId_HID']->setText($params);
	$GLOBALS['nav_TREE']->selectItem('nav#item_'.$params);

	$myWindow = new Window(array(
		'name' => 'addBookmark_DLG',
		'father' => 'eyeNav_window_Content',
		'type' => NOLIST_CLOSE_WINDOW,
		'cent' => 1,
		'width' => 540,
		'height' => 250,
		'title' => 'Add Bookmark',
		'removepid' => 0
	));
	$myWindow->show();

	//TREE LABEL
	$treeLabel = new Label(array(
		'name' => 'addBookmark_tree_LBL',
		'father' => 'addBookmark_DLG_Content',
		'x' => 10,
		'y' => 10,
		'text' => 'Choose a folder for the new Bookmark:'
	));
	$treeLabel->show();

	//FOLDERS TREE
	$myTree = new Tree(array(
		'name'=>'addBookmark_folders_TREE',
		'father'=>'addBookmark_DLG_Content',
		'x'=>4,
		'y'=>24,
		'width' =>200,
		'height' => 180,
		'clickTree'=>1
	));
	$myTree->show();
	eyex('rawjs',array('js' => 'document.getElementById("'.$myPid.'_addBookmark_folders_TREE").style.overflow = "auto";'));
	//root node
	$myTree->addItem('addBookmark_folders_TREE', 'addBookmark_folders_TREE_root', i18n('translate',array('Bookmarks')));
	$myTree->addSubList('addBookmark_folders_TREE_root', 'addBookmark#folder_root');

	$xml = eyeXML('getXMLconfig',array('eyeNav','conf.xml'));
	$xml = $xml['eyeNav'][0]['bookmarks'][0];
	eyeNav_lib_fillFolders($xml,'addBookmark#folder_root','add');
	$myTree->processList();
	$myTree->setCss(array('border' => 'thin solid grey'));
	if ($params!='root') {
		$bm = eyeNav_getBookmarkFromId($xml['bookmark'],$params);
		if ($bm['type'][0] == 'url') {
			$parent = eyeNav_getParentBookmarkFromId($xml,$GLOBALS['selectedBookmarkId_HID']->text);
			$parent = $parent['id'][0];
			if ($parent == 'root') {
				$parentFolderId = 'addBookmark_folders_TREE_root';
			} else {
				$parentFolderId = 'nav#item_add_'.$parent;
			}
		} else {
			$parent = $params;
			$parentFolderId = 'nav#item_add_'.$parent;
		}
	} else {
		$parent = 'root';
		$parentFolderId = 'addBookmark_folders_TREE_root';
	}
	$myTree->selectItem($parentFolderId);
	$myTree->expandTree();
	//Bookmark'S URL LABEL
	$urlLabel = new Label(array(
		'name' => 'addBookmark_url_LBL',
		'father' => 'addBookmark_DLG_Content',
		'x' => 230,
		'y' => 40,
		'text' => 'Type the URL of the Bookmark:'
	));
	$urlLabel->show();

	//Bookmark'S URL TEXTBOX
	if (!empty($theurl)) {
		$urlTB = $theurl;
	} else {
		$urlTB = 'http://';
	}
	$urlTextbox = new Textbox(array(
		'name' => 'addBookmark_url_TXTBOX',
		'father' => 'addBookmark_DLG_Content',
		'x' => 230,
		'y' => 60,
		'width' => 294,
		'enabled' => 1,
		'text' => $urlTB
	));
	$urlTextbox->show();

	//Bookmark'S NAME LABEL
	$nameLabel = new Label(array(
		'name' => 'addBookmark_name_LBL',
		'father' => 'addBookmark_DLG_Content',
		'x' => 230,
		'y' => 90,
		'text' => 'Type the name of the Bookmark:'
	));
	$nameLabel->show();

	//Bookmark'S NAME TEXTBOX
	$nameTextbox = new Textbox(array(
		'name' => 'addBookmark_name_TXTBOX',
		'father' => 'addBookmark_DLG_Content',
		'x' => 230,
		'y' => 110,
		'width' => 294,
		'enabled' => 1,
		'text' => ''
	));
	$nameTextbox->show();
	$nameTextbox->addFriend($urlTextbox);
	$nameTextbox->addEnterEventMsg('addBookmark_add_BTN');
	$urlTextbox->addFriend($nameTextbox);
	$urlTextbox->addEnterEventMsg('addBookmark_add_BTN');

	//ADD BUTTON
	$addButton = new Button(array(
		'name' => 'addBookmark_add_BTN',
		'father' => 'addBookmark_DLG_Content',
		'caption' => 'Accept',
		'x' => 455,
		'y' => 184,
		'width' => 70,
		'enabled' => 1,
	));
	$addButton->addFriend($urlTextbox);
	$addButton->addFriend($nameTextbox);
	$addButton->show(0);

	//CANCEL BUTTON
	$cancelButton = new Button(array(
		'name' => 'addBookmark_cancel_BTN',
		'father' => 'addBookmark_DLG_Content',
		'caption' => 'Cancel',
		'x' => 370,
		'y' => 184,
		'width' => 70,
		'enabled' => 1,
	));
	$cancelButton->show(0);

	$selectedBookmark = new Hidden(array(
		'name' =>'addBookmark_selectedFolder_HID',
		'father' => 'addBookmark_DLG_Content',
		'text' => $parent
	));
	eyeWidgets('serialize',array($selectedBookmark));

}

function eyeNav_on_nav_addFolder($params=null) {
	eyeNav_prepareForModalDialog();
	global $myPid;
	$GLOBALS['selectedBookmarkId_HID']->setText($params);
	$GLOBALS['nav_TREE']->selectItem('nav#item_'.$params);

	$myWindow = new Window(array(
		'name' => 'addFolder_DLG',
		'father' => 'eyeNav_window_Content',
		'type' => NOLIST_CLOSE_WINDOW,
		'cent' => 1,
		'width' => 540,
		'height' => 250,
		'title' => 'Add Folder',
		'removepid' => 0
	));
	$myWindow->show();

	//TREE LABEL
	$treeLabel = new Label(array(
		'name' => 'addFolder_tree_LBL',
		'father' => 'addFolder_DLG_Content',
		'x' => 10,
		'y' => 10,
		'text' => 'Choose a parent folder for the new folder:'
	));
	$treeLabel->show();

	//FOLDERS TREE
	$myTree = new Tree(array(
		'name'=>'addFolder_folders_TREE',
		'father'=>'addFolder_DLG_Content',
		'x'=>4,
		'y'=>24,
		'width' =>200,
		'height' => 180,
		'clickTree'=>1
	));
	$myTree->show();
	eyex('rawjs',array('js' => 'document.getElementById("'.$myPid.'_addFolder_folders_TREE").style.overflow = "auto";'));

	//root node
	$myTree->addItem('addFolder_folders_TREE', 'addFolder_folders_TREE_root', i18n('translate',array('Bookmarks')));
	$myTree->addSubList('addFolder_folders_TREE_root', 'addFolder#folder_root');
	$xml = eyeXML('getXMLconfig',array('eyeNav','conf.xml'));
	$xml = $xml['eyeNav'][0]['bookmarks'][0];
	eyeNav_lib_fillFolders($xml,'addFolder#folder_root','add');
	$myTree->processList();
	$myTree->setCss(array('border' => 'thin solid grey'));
	if ($params!='root') {
		$bm = eyeNav_getBookmarkFromId($xml['bookmark'],$params);
		if ($bm['type'][0] == 'url') {
			$parent = eyeNav_getParentBookmarkFromId($xml,$GLOBALS['selectedBookmarkId_HID']->text);
			$parent = $parent['id'][0];
			if ($parent == 'root') {
				$parentFolderId = 'addFolder_folders_TREE_root';
			} else {
				$parentFolderId = 'nav#item_add_'.$parent;
			}
		} else {
			$parent = $params;
			$parentFolderId = 'nav#item_add_'.$parent;
		}
	} else {
		$parent = 'root';
		$parentFolderId = 'addFolder_folders_TREE_root';
	}
	$myTree->selectItem($parentFolderId);
	$myTree->expandTree();
	//Bookmark'S NAME LABEL
	$nameLabel = new Label(array(
		'name' => 'addFolder_name_LBL',
		'father' => 'addFolder_DLG_Content',
		'x' => 230,
		'y' => 90,
		'text' => 'Type the name of the folder:'
	));
	$nameLabel->show();

	//Bookmark'S NAME TEXTBOX
	$nameTextbox = new Textbox(array(
		'name' => 'addFolder_name_TXTBOX',
		'father' => 'addFolder_DLG_Content',
		'x' => 230,
		'y' => 110,
		'width' => 294,
		'enabled' => 1,
		'text' => ''
	));
	$nameTextbox->show();
	$nameTextbox->addEnterEventMsg('addFolder_add_BTN');

	//ADD BUTTON
	$addButton = new Button(array(
		'name' => 'addFolder_add_BTN',
		'father' => 'addFolder_DLG_Content',
		'caption' => 'Accept',
		'x' => 457,
		'y' => 184,
		'width' =>70,
		'enabled' => 1,
	));
	$addButton->addFriend($nameTextbox);
	$addButton->addFriend($myTree);
	$addButton->show(0);

	//CANCEL BUTTON
	$cancelButton = new Button(array(
		'name' => 'addFolder_cancel_BTN',
		'father' => 'addFolder_DLG_Content',
		'caption' => 'Cancel',
		'x' => 372,
		'y' => 184,
		'width' => 70,
		'enabled' => 1,
	));
	$cancelButton->show(0);

	$selectedFolder = new Hidden(array(
		'name' =>'addFolder_selectedFolder_HID',
		'father' => 'addFolder_DLG_Content',
		'text' => $parent
	));
	eyeWidgets('serialize',array($selectedFolder));
}

function eyeNav_on_addFolder_folders_TREE($params=null) {
	$item = $params['itemName'][0];
	if ($item == 'addFolder_folders_TREE_root') {
		$GLOBALS['addFolder_selectedFolder_HID']->setText('root');
	} else {
		$GLOBALS['addFolder_selectedFolder_HID']->setText( /* utf8 */ substr($item, 13));
	}
}

function eyeNav_on_addBookmark_folders_TREE($params=null) {
	$item = $params['itemName'][0];
	if ($item == 'addBookmark_folders_TREE_root') {
		$GLOBALS['addBookmark_selectedFolder_HID']->setText('root');
	} else {
		$GLOBALS['addBookmark_selectedFolder_HID']->setText( /* utf8 */ substr($item, 13));
	}
}

function eyeNav_on_editBookmark_folders_TREE($params=null) {
	$item = $params['itemName'][0];
	if ($item == 'editBookmark_folders_TREE_root') {
		$GLOBALS['editBookmark_selectedFolder_HID']->setText('root');
	} else {
		$GLOBALS['editBookmark_selectedFolder_HID']->setText( /* utf8 */ substr($item, 14));
	}
}

function eyeNav_on_editFolder_folders_TREE($params=null) {
	$item = $params['itemName'][0];
	if ($item == 'editFolder_folders_TREE_root') {
		$GLOBALS['editFolder_selectedFolder_HID']->setText('root');
	} else {
		$GLOBALS['editFolder_selectedFolder_HID']->setText( /* utf8 */ substr($item, 14));
	}
}

function eyeNav_lib_fillFolders($xml,$folder,$label='',$ignore = null) {
	if (is_array($xml['bookmark'])) {
		foreach ($xml['bookmark'] as $bookmark) {
			if ($bookmark['type'][0] == 'folder') {
				if ($bookmark['id'][0]!=$ignore) {
					$GLOBALS['nav_TREE']->addItem($folder,'nav#item_'.$label.'_'.$bookmark['id'][0],$bookmark['name'][0]);
					$GLOBALS['nav_TREE']->addSubList('nav#item_'.$label.'_'.$bookmark['id'][0],'nav#folder_'.$label.'_'.$bookmark['id'][0]);
					eyeNav_lib_fillFolders($bookmark,'nav#folder_'.$label.'_'.$bookmark['id'][0],$label,$ignore);
				}
			}
		}
	}
}
function eyeNav_on_nav_edit($params=null) {
	$xml = eyeXML('getXMLconfig',array('eyeNav','conf.xml'));
	$bookmark = eyeNav_getBookmarkFromId($xml['eyeNav'][0]['bookmarks'][0]['bookmark'], $params);
	if ($bookmark['type'][0] == 'folder') {
		eyeNav_on_nav_edit_folder($params);
	} else {
		eyeNav_on_nav_edit_bookmark($params);
	}
}
function eyeNav_on_nav_edit_folder($params=null) {
	eyeNav_prepareForModalDialog();
	global $myPid;
	$GLOBALS['selectedBookmarkId_HID']->setText($params);
	$GLOBALS['nav_TREE']->selectItem('nav#item_'.$params);
	$xml = eyeXML('getXMLconfig',array('eyeNav','conf.xml'));
	$xml = $xml['eyeNav'][0]['bookmarks'][0]['bookmark'];
	$bookmark = eyeNav_getBookmarkFromId($xml,$params);

	$myWindow = new Window(array(
		'name' => 'editFolder_DLG',
		'father' => 'eyeNav_window_Content',
		'type' => NOLIST_CLOSE_WINDOW,
		'cent' => 1,
		'width' => 540,
		'height' => 250,
		'title' => 'Edit Folder',
		'removepid' => 0
	));
	$myWindow->show();

	//TREE LABEL
	$treeLabel = new Label(array(
		'name' => 'editFolder_tree_LBL',
		'father' => 'editFolder_DLG_Content',
		'x' => 10,
		'y' => 10,
		'text' => 'Choose a parent for the folder:'
	));
	$treeLabel->show();

	//FOLDERS TREE
	$myTree = new Tree(array(
		'name'=>'editFolder_folders_TREE',
		'father'=>'editFolder_DLG_Content',
		'x'=>4,
		'y'=>24,
		'width' =>200,
		'height' => 180,
		'clickTree'=>1
	));
	$myTree->show();
	eyex('rawjs',array('js' => 'document.getElementById("'.$myPid.'_editFolder_folders_TREE").style.overflow = "auto";'));
	$myTree->addItem('editFolder_folders_TREE', 'editFolder_folders_TREE_root', i18n('translate',array('Bookmarks')));
	$myTree->addSubList('editFolder_folders_TREE_root', 'editFolder#folder_root');
	$xml = eyeXML('getXMLconfig',array('eyeNav','conf.xml'));
	$xml = $xml['eyeNav'][0]['bookmarks'][0];
	eyeNav_lib_fillFolders($xml,'editFolder#folder_root','edit',$params);
	$myTree->processList();
	$myTree->setCss(array('border' => 'thin solid grey'));
	if ($params!='root') {
		$bm = eyeNav_getBookmarkFromId($xml['bookmark'],$params);
		$parent = eyeNav_getParentBookmarkFromId($xml,$GLOBALS['selectedBookmarkId_HID']->text);
		$parent = $parent['id'][0];
		if ($bm['type'][0] == 'url') {
			if ($parent == 'root') {
				$parentFolderId = 'editFolder_folders_TREE_root';
			} else {
				$parentFolderId = 'nav#item_edit_'.$parent;
			}
		} else {
			$parentFolderId = 'nav#item_edit_'.$parent;
		}
	} else {
		$parent = 'root';
		$parentFolderId = 'editFolder_folders_TREE_root';
	}
	$myTree->selectItem($parentFolderId);
	$myTree->expandTree();

	//FEED'S NAME LABEL
	$nameLabel = new Label(array(
		'name' => 'editFolder_name_LBL',
		'father' => 'editFolder_DLG_Content',
		'x' => 230,
		'y' => 90,
		'text' => 'Type the name of the folder:'
	));
	$nameLabel->show();

	//FEED'S NAME TEXTBOX
	$nameTextbox = new Textbox(array(
		'name' => 'editFolder_name_TXTBOX',
		'father' => 'editFolder_DLG_Content',
		'x' => 230,
		'y' => 110,
		'width' => 294,
		'enabled' => 1,
		'text' => $bookmark['name'][0]
	));
	$nameTextbox->show();
	$nameTextbox->addEnterEventMsg('editFolder_add_BTN');

	//APPLY BUTTON
	$applyButton = new Button(array(
		'name' => 'editFolder_apply_BTN',
		'father' => 'editFolder_DLG_Content',
		'caption' => 'Apply',
		'x' => 350,
		'y' => 184,
		'width' => 60,
		'enabled' => 1,
		'img' => 'index.php?extern=apps/eyeFeeds/gfx/editfolder.png'
	));
	$applyButton->addFriend($nameTextbox);
	$applyButton->show(0);

	//CANCEL BUTTON
	$cancelButton = new Button(array(
		'name' => 'editFolder_cancel_BTN',
		'father' => 'editFolder_DLG_Content',
		'caption' => 'Cancel',
		'x' => 440,
		'y' => 184,
		'width' => 70,
		'enabled' => 1,
		'img' => 'index.php?theme=' . $_SESSION['usertheme'] . '&extern=images/toolbar/button_cancel.png'
	));
	$cancelButton->show(0);

	$bookmarkId = new Hidden(array(
		'name' =>'editFolder_bookmarkId_HID',
		'father' => 'editFolder_DLG_Content',
		'text' => $params
	));
	eyeWidgets('serialize',array($bookmarkId));

	$selectedFolder = new Hidden(array(
		'name' =>'editFolder_selectedFolder_HID',
		'father' => 'editFolder_DLG_Content',
		'text' => $parent		//default is current parent folder
	));
	eyeWidgets('serialize',array($selectedFolder));
}

function eyeNav_on_nav_edit_bookmark($params=null) {
	eyeNav_prepareForModalDialog();
	global $myPid;
	$GLOBALS['selectedBookmarkId_HID']->setText($params);
	$GLOBALS['nav_TREE']->selectItem('nav#item_'.$params);
	$xml = eyeXML('getXMLconfig',array('eyeNav','conf.xml'));
	$xml = $xml['eyeNav'][0]['bookmarks'][0]['bookmark'];
	$bookmark = eyeNav_getBookmarkFromId($xml,$params);

	$myWindow = new Window(array(
		'name' => 'editBookmark_DLG',
		'father' => 'eyeNav_window_Content',
		'type' => NOLIST_CLOSE_WINDOW,
		'cent' => 1,
		'width' => 540,
		'height' => 250,
		'title' => 'Edit Bookmark',
		'removepid' => 0
	));
	$myWindow->show();

	//TREE LABEL
	$treeLabel = new Label(array(
		'name' => 'editBookmark_tree_LBL',
		'father' => 'editBookmark_DLG_Content',
		'x' => 10,
		'y' => 10,
		'text' => 'Choose a folder for the Bookmark:'
	));
	$treeLabel->show();

	//FOLDERS TREE
	$myTree = new Tree(array(
		'name'=>'editBookmark_folders_TREE',
		'father'=>'editBookmark_DLG_Content',
		'x'=>4,
		'y'=>24,
		'width' =>200,
		'height' => 180,
		'clickTree'=>1
	));
	$myTree->show();
	eyex('rawjs',array('js' => 'document.getElementById("'.$myPid.'_editBookmark_folders_TREE").style.overflow = "auto";'));
	//root node
	$myTree->addItem('editBookmark_folders_TREE', 'editBookmark_folders_TREE_root', i18n('translate',array('Bookmarks')));
	$myTree->addSubList('editBookmark_folders_TREE_root', 'editBookmark#folder_root');
	$xml = eyeXML('getXMLconfig',array('eyeNav','conf.xml'));
	$xml = $xml['eyeNav'][0]['bookmarks'][0];
	eyeNav_lib_fillFolders($xml,'editBookmark#folder_root','edit');
	$myTree->processList();
	$myTree->setCss(array('border' => 'thin solid grey'));
	if ($params!='root') {
		$bm = eyeNav_getBookmarkFromId($xml['bookmark'],$params);
		if ($bm['type'][0] == 'url') {
			$parent = eyeNav_getParentBookmarkFromId($xml,$GLOBALS['selectedBookmarkId_HID']->text);
			$parent = $parent['id'][0];
			if ($parent == 'root') {
				$parentFolderId = 'editBookmark_folders_TREE_root';
			} else {
				$parentFolderId = 'nav#item_edit_'.$parent;
			}
		} else {
			$parent = $params;
			$parentFolderId = 'nav#item_edit_'.$parent;
		}
	} else {
		$parent = 'root';
		$parentFolderId = 'editBookmark_folders_TREE_root';
	}
	$myTree->selectItem($parentFolderId);
	$myTree->expandTree();
	//Bookmark'S URL LABEL
	$urlLabel = new Label(array(
		'name' => 'editBookmark_url_LBL',
		'father' => 'editBookmark_DLG_Content',
		'x' => 230,
		'y' => 40,
		'text' => 'Type the URL of the Bookmark:'
	));
	$urlLabel->show();

	//Bookmark'S URL TEXTBOX
	$urlTextbox = new Textbox(array(
		'name' => 'editBookmark_url_TXTBOX',
		'father' => 'editBookmark_DLG_Content',
		'x' => 230,
		'y' => 60,
		'width' => 294,
		'enabled' => 1,
		'text' => $bookmark['url'][0]
	));
	$urlTextbox->show();

	//Bookmark'S NAME LABEL
	$nameLabel = new Label(array(
		'name' => 'editBookmark_name_LBL',
		'father' => 'editBookmark_DLG_Content',
		'x' => 230,
		'y' => 90,
		'text' => 'Type the name of the Bookmark (optional):'
	));
	$nameLabel->show();

	//Bookmark'S NAME TEXTBOX
	$nameTextbox = new Textbox(array(
		'name' => 'editBookmark_name_TXTBOX',
		'father' => 'editBookmark_DLG_Content',
		'x' => 230,
		'y' => 110,
		'width' => 294,
		'enabled' => 1,
		'text' => $bookmark['name'][0]
	));
	$nameTextbox->show();
	$nameTextbox->addFriend($urlTextbox);
	$nameTextbox->addEnterEventMsg('editBookmark_add_BTN');
	$urlTextbox->addFriend($nameTextbox);
	$urlTextbox->addEnterEventMsg('editBookmark_add_BTN');

	//APPLY BUTTON
	$applyButton = new Button(array(
		'name' => 'editBookmark_apply_BTN',
		'father' => 'editBookmark_DLG_Content',
		'caption' => 'Accept',
		'x' => 457,
		'y' => 184,
		'width' => 70,
		'enabled' => 1,
	));
	$applyButton->addFriend($urlTextbox);
	$applyButton->addFriend($nameTextbox);
	$applyButton->show(0);

	//CANCEL BUTTON
	$cancelButton = new Button(array(
		'name' => 'editBookmark_cancel_BTN',
		'father' => 'editBookmark_DLG_Content',
		'caption' => 'Cancel',
		'x' => 370,
		'y' => 184,
		'width' => 70,
		'enabled' => 1,
	));
	$cancelButton->show(0);

	$bookmarkId = new Hidden(array(
		'name' =>'editBookmark_bookmarkId_HID',
		'father' => 'editBookmark_DLG_Content',
		'text' => $params
	));
	eyeWidgets('serialize',array($bookmarkId));

	$selectedFolder = new Hidden(array(
		'name' =>'editBookmark_selectedFolder_HID',
		'father' => 'editBookmark_DLG_Content',
		'text' => $parent		//default is current parent folder
	));
	eyeWidgets('serialize',array($selectedFolder));
}

function eyeNav_on_nav_del($params=null) {
	eyeNav_prepareForModalDialog();
	$GLOBALS['selectedBookmarkId_HID']->text = $params;
	$GLOBALS['nav_TREE']->selectItem('nav#item_'.$params);
	$id = $params;
	$xml = eyeXML('getXMLconfig',array('eyeNav','conf.xml'));
	$xml = $xml['eyeNav'][0]['bookmarks'][0]['bookmark'];
	$xml = eyeNav_getBookmarkFromId($xml,$id);
	$type = $xml['type'][0];
	$name = $xml['name'][0];

	eyeX('messageBox',array(
		'content' => 'Are you sure you want to delete this '.$type.'?',		//$type can be 'feed' or 'folder'
		'type' => 3,
		'title' => 'Delete bookmark/folder',
		'win_name' => 'delete_DLG',
		'win_style' => TITLE + CLOSE,
		'win_removepid' => 0,
		'btn1_capt' => 'Accept',
		'btn1_name' => 'delete_deleteYes_BTN',
		'btn2_capt' => 'Cancel',
		'btn2_name' => 'delete_deleteNo_BTN',
		'hidden_name' => 'delete_BookmarkId_HID',
		'hidden_text' => $id,
		'father' => 'eyeNav_window_Content',
		'img' => 'index.php?theme=' . $_SESSION['usertheme'] . '&extern=icons/48x48/editClean.png'
	));
}
function eyeNav_on_delete_deleteNo_BTN($params=null) {
	$GLOBALS['delete_DLG']->close();
}
function eyeNav_on_delete_deleteYes_BTN($params=null) {
	$id = $GLOBALS['delete_BookmarkId_HID']->text;
	$selectedid = $GLOBALS['selectedBookmarkId_HID']->text;
	$xml = eyeXML('getXMLconfig',array('eyeNav','conf.xml'));
	$newBookmarksToSave = eyeNav_deleteBookmarkFolder($xml['eyeNav'][0]['bookmarks'][0], $id);
	$xml['eyeNav'][0]['bookmarks'][0] = $newBookmarksToSave;
	eyeXML('setXMLconfig',array('eyeNav','conf.xml',$xml));
	if (eyeXML('setXMLconfig',array('eyeNav','conf.xml',$xml))){
		eyeX('messageBox',array('content'=> 'Element successfully deleted'));
		eyeNav_lib_refreshTree();
	}else
		eyeX('messageBox',array('content'=> 'Error deleting the feed'));

	if (is_object($GLOBALS['delete_DLG'])) {
		$GLOBALS['delete_DLG']->close();
	}
}

function eyeNav_saveBookmarks($xml) {

}

function eyeNav_deleteBookmarkFolder($bookmarks, $id) {
	if (!is_array($bookmarks))
		return false;

	foreach($bookmarks['bookmark'] as $key => $value) {
		if ($value['id'][0] == $id) {
			unset($bookmarks['bookmark'][$key]);
			break;
		}
		elseif ($value['type'][0] == 'folder') {
			$bookmarks['bookmark'][$key] = eyeNav_deleteBookmarkFolder($value, $id);
		}
	}
	return $bookmarks;
}

function eyeNav_getBookmarkFromId($xml, $id) {
	$return = false;
	if ($id == null) {
		return $xml;
	}
	foreach($xml as $key => $value) {
		if ($value['type'][0] == 'folder')
			$return = eyeNav_getBookmarkFromId($value['bookmark'], $id);
		if ($value['id'][0] == $id)
			$return = $xml[$key];

		if ($return !== false)
			break;
	}
	return $return;
}
function eyeNav_prepareForModalDialog() {
	if ($GLOBALS['addBookmark_DLG'])
		$GLOBALS['addBookmark_DLG']->close();

	if ($GLOBALS['editBookmark_DLG'])
		$GLOBALS['editBookmark_DLG']->close();

	if ($GLOBALS['addFolder_DLG'])
		$GLOBALS['addFolder_DLG']->close();

	if ($GLOBALS['editFolder_DLG'])
		$GLOBALS['editFolder_DLG']->close();

	if ($GLOBALS['delete_DLG'])
		$GLOBALS['delete_DLG']->close();
}

function eyeNav_lib_ShowSearch($params = array()) {
	global $myPid;

	$url = '<none>';
	$xml = eyeXML('getXMLconfig',array('eyeNav','conf.xml'));
	$xml['eyeNav'][0]['sidebar'][0] = 2;
	eyeXML('setXMLconfig',array('eyeNav','conf.xml',$xml));
	if ($params['arg'][0]) {
		$url = um('getCurrentUserDir') . '/' . FILES_USER_DIR . '/' . $params['arg'][0];
		$xml = eyeXML('getXMLfile',array(vfs('getRealName',array($url))));
		if (!$xml['eyeNav'][0]['searches'][0] || !is_array($xml['eyeNav'][0]['searches'][0])) {
			eyex('messageBox',array('content' => 'The selected file is not a valid eyeNav search file!'));
			return;
		}
	}

	if (is_object($GLOBALS['eyeNav_hidden_bookmarks_url'])) {
		$GLOBALS['eyeNav_hidden_bookmarks_url']->setText('none');
	}
	if (is_object($GLOBALS['eyeNav_box'])) {
		$GLOBALS['eyeNav_box']->remove();
	}

	$myContainer = new Container(array(
		'father' => 'eyeNav_window_box',
		'name' => 'eyeNav_box',
		'height' => 0,
		'width' => 140,
		'x' => 0,
		'y' => 0
	));
	$myContainer->show();
	eyeWidgets('serialize',array($myContainer));
	$myContainer->setCss(array(
		'direction' => 'ltr'
	));
	eyex('rawjs',array('js' => 'document.getElementById("' . $myPid . '_eyeNav_window_box_Content").style.top = "0";'));

	if (!is_object($GLOBALS['eyeNav_hidden_search_url'])) {
		// $myHidden
		$myHidden = new Hidden(array(
			'father' => 'eyeNav_box',
			'name' => 'eyeNav_hidden_search_url',
			'text' => $url
		));
		$myHidden->show();
		eyeWidgets('serialize',array($myHidden));
	} else {
		$GLOBALS['eyeNav_hidden_search_url']->setText($url);
	}

	$myLabel = new Label(array(
		'father' => 'eyeNav_box',
		'name' => 'eyeNav_box_label_0',
		'text' => $xml['eyeNav'][0]['searches'][0]['title'][0],
		'x' => 10,
		'y' => 0
	));
	$myLabel->show();
	$myLabel->setCss(array(
		'color' => '#044d85',
		'font-size' => '12px',
		'font-weight' => 'bold',
		'white-space' => 'nowrap'
	));

	$myLine = new Line(array(
		'father' => 'eyeNav_box',
		'name' => 'eyeNav_line_search_0',
		'width' => 130,
		'x' => 10,
		'y' => 15
	));
	$myLine->show();

	// 'Nav's search' search box
	$myTextbox = new Textbox(array(
		'father' => 'eyeNav_box',
		'name' => 'eyeNav_search',
		'width' => 130,
		'x' => 10,
		'y' => 25
	));
	$myTextbox->show();
	$myTextbox->focus();
	$myTextbox->addEnterEventMsg('search_default');

	$x = 1;
	$boxY = 50;
	foreach($xml['eyeNav'][0]['searches'][0]['category'] as $category) {
		$myLabel = new Label(array(
			'father' => 'eyeNav_box',
			'name' => 'eyeNav_box_label_' . $x,
			'text' => $category['name'][0],
			'x' => 20,
			'y' => $boxY
		));
		$myLabel->show();
		$myLabel->setCss(array(
			'color' => '#044d85',
			'font-size' => '12px',
			'white-space' => 'nowrap'
		));
		$x++;
		$boxY += 20;
		foreach($category['link'] as $link) {
			$myHiddenURL = new Hidden(array(
				'father' => 'eyeNav_box',
				'name' => 'eyeNav_box_hiddenSearch_' . $x,
				'text' => $link['url'][0]
			));
			$myHiddenURL->show();
			$myImagebox = new Imagebox(array(
				'father' => 'eyeNav_box',
				'name' => 'eyeNav_box_imagebox_' . $x,
				'url' => 'index.php?theme=' . $_SESSION['usertheme'] . '&extern=icons/12x12/link.png',
				'x' => 30,
				'y' => $boxY
			));
			$myImagebox->show();
			$myImagebox->setCss(array(
				'cursor' => 'pointer'
			));
			eyex('rawjs',array('js' => 'document.getElementById("' . $myPid . '_eyeNav_box_imagebox_' . $x . '_Container").onclick = function() { window.open("' . str_replace('%s','" + document.getElementById("' . $myPid . '_eyeNav_search").value + "',$link['url'][0]) . '"); return false; }'));
			$myLabel = new Label(array(
				'disablemsg' => 0,
				'father' => 'eyeNav_box',
				'name' => 'eyeNav_box_label_' . $x,
				'signal' => 'search_label',
				'text' => $link['name'][0],
				'x' => 46,
				'y' => $boxY
			));
			$myLabel->addFriend($myHiddenURL);
			$myLabel->addFriend($myTextbox);
			$myLabel->show();
			$myLabel->setCss(array(
				'cursor' => 'pointer',
				'white-space' => 'nowrap'
			));
			$boxY += 20;
			$x++;
		}
		$boxY += 10;
	}

	$myLine = new Line(array(
		'father' => 'eyeNav_box',
		'name' => 'eyeNav_line_search_1',
		'width' => 130,
		'x' => 10,
		'y' => $boxY
	));
	$myLine->show();

	$myButton = new Button(array(
		'caption' => 'Open searches',
		'father' => 'eyeNav_box',
		'img' => 'index.php?theme=' . $_SESSION['usertheme'] . '&extern=icons/16x16/folder.png',
		'name' => 'eyeNav_button_search_open',
		'signal' => 'open_searches',
		'width' => 100,
		'x' => 10,
		'y' => $boxY + 10
	));
	$myButton->show();

}

function eyeNav_lib_array_findIdByText($params) {
	$array = $params[0];
	$text = $params[1];
	$path = $params[2];
	$type = $params[3];
	if (!$array || !$text || !is_array($array)) {
		errorCodes('setErrorCode',array(INCORRECT_PARAMS));
		return false;
	}
	$x = 0;
	foreach($array as $secArray) {
		if (is_array($path)) {
			foreach($path as $pathNow) {
				$secArray = $secArray[$pathNow];
			}
		}
		if ($secArray != $text && $type == 2) {
			$return[] = $x;
		} elseif ($secArray == $text && $type != 2) {
			$return[] = $x;
		}
		$x++;
	}
	return($return);
}

function eyeNav_lib_doUrl($params = array()) {
	global $checknum;
	global $currentUser;
	global $myPid;
	
	if (!$params['page'][0]) {
		$config = eyeXML('getXMLconfig',array('eyeNav','conf.xml'));
		$page = $config['eyeNav'][0]['home'][0];
		if ($page == 'http://oneye-project.org/') {
			$page .= '?lang=' . i18n('getLang');
			if ($currentUser == ROOTUSER) {
				$page .='&version=' . urlencode(EYEOS_VERSION);
			}
		}
	} else {
		$page = $params['page'][0];
	}
	if ( /* utf8 */ strpos($page, ':') === false) {
		$page = 'http://' . $page;
	}
	$GLOBALS['eyeNav_url']->setText($page);
	if (!$params['frame'][0]) {
		eyex('runjs', array('js' => 'var doUrl, frame;
		
		doUrl = function () {
			var contentDocument;
			
			contentDocument = frame.contentDocument ? frame.contentDocument : frame.document;
			contentDocument.getElementsByTagName("iframe")[0].src = "index.php?checknum=' . $checknum . '&msg=doOutput&page=' . base64_encode($page) . '";
		};
		
		frame = parent.frames["' . strval($myPid) . '_eyeNav_frame"];
		if (frame.contentDocument) {
			doUrl();
		} else {
			setTimeout(doUrl, 200);
		}'));
		
		eyeNav_lib_FocusFrame();
	}
}

function eyeNav_lib_FocusFrame() {
	global $myPid;
	
	$GLOBALS['eyeNav_frame']->focus();
	
	eyex('runjs', array('js' => 'var focus, frame;
	
	focus = function () {
		var contentDocument;
		
		contentDocument = frame.contentDocument ? frame.contentDocument : frame.document;
		contentDocument.getElementsByTagName("iframe")[0].focus();
	};
	
	frame = parent.frames["' . strval($myPid) . '_eyeNav_frame"];
	if (frame.contentDocument) {
		focus();
	} else {
		setTimeout(focus, 200);
	}'));
}
?>