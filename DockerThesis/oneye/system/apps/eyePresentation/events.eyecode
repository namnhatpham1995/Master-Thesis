<?php
/*
  ___  _ __   ___ _   _  ___
 / _ \| '_ \ / _ \ | | |/ _ \
| (_) | | | |  __/ |_| |  __/
 \___/|_| |_|\___|\__, |\___|
                  |___/

oneye is released under the GNU Affero General Public License Version 3 (AGPL3)
 -> provided with this release in license.txt
 -> or via web at www.gnu.org/licenses/agpl-3.0.txt

Copyright © 2005 - 2010 eyeos Team (team@eyeos.org)
             since 2010 Lars Knickrehm (mail@lars-sh.de)
*/

function eyePresentation_on_Message($params="") {
	eyeWidgets('updateContent',$params);
}

function eyePresentation_on_Open($params=null) {
	global $checknum;
	$options = array(
		0,
		'SelectFileOpen',
		$checknum,
	);
	proc('launch',array('eyeDialog',$options));
}

function eyePresentation_on_SelectFileOpen($params=null) {
	global $myPid;

	$file = $params['arg'][0];
	if($file) {
		$file = um('getCurrentUserDir').FILES_USER_DIR.'/'.$file;
		//TODO: SECURITY: MAYBE VFS HERE
		if(is_dir($file)) {
			eyex('messageBox',array('content'=>'You need to select a file to open!'));
			return;
		}
		if (!vfs('checkPermissions', array($file, 'r'))) {
			eyex('messageBox',array('content'=>'Sorry, you do not have sufficient permissions.'));
			return;
		}

		$dest = realpath(um('getCurrentUserDir') . '/tmp') . DIRECTORY_SEPARATOR . $myPid . '_' . basename($file);
		vfs('real_mkDir', array($dest));
		eyeConverter('convert', array(vfs('getRealName', array($file)), $dest, 'html', true, '--doctype=presentation'));

		$myHidden = new Hidden(array('name'=>'filepath','father'=>'presentationWND','text'=>$file));
		eyeWidgets('serialize',array($myHidden));
		$GLOBALS['filepath'] = $myHidden;
		gotoSlide(0);
		global $checknum;
		$GLOBALS['imgFrame']->setUrl("index.php?checknum=".$checknum."&msg=getSlide&anticache=".md5(uniqid(time())));
	}
}

function eyePresentation_on_fullscreen($params=null) {
	global $checknum;
	$GLOBALS['presentationWND']->setFullScreen();
}

function eyePresentation_on_back($params=null) {
	global $checknum;
	$myNumber = intval($GLOBALS['currentSlide']->text);
	if($myNumber == 0) {
		eyeX('messagebox',array('content'=>'You are already on the first slide, you cannot go back anymore!'));
	} else {
		$myNumber--;
		gotoSlide($myNumber);
		$GLOBALS['imgFrame']->setUrl("index.php?checknum=".$checknum."&msg=getSlide&anticache=".md5(uniqid(time())));
	}
}

function eyePresentation_on_next($params=null) {
	global $checknum;
	$myNumber = intval($GLOBALS['currentSlide']->text);
	$myNumber++;
	gotoSlide($myNumber);
	$GLOBALS['imgFrame']->setUrl("index.php?checknum=".$checknum."&msg=getSlide&anticache=".md5(uniqid(time())));
}

function eyePresentation_on_getSlide($params=null) {
	global $myPid;
	$myNumber = $GLOBALS['currentSlide']->text;
	$myName = basename($GLOBALS['filepath']->text);
	$file = realpath(um('getCurrentUserDir') . '/tmp') . '/' . $myPid . '_' . $myName . '/img' . $myNumber . '.jpg';
	if(!$file) {
		return;
	}
	$len = filesize($file);
	$info = @getimagesize($file);
	if ($info !== false) {
		$fp = vfs('real_open',array($file,'r'),1);
		if(!$fp) {
			return;
		}
		header('Content-Type: '.$info['mime']);
		header("Content-Length: $len");
		header("Accept-Ranges: bytes");
		$content = fread($fp,$len);
		echo $content;
		fclose($fp);
	}
	exit;
}

function eyePresentation_on_Resize($params=null) {
	$width = $params['arg'][0];
	$height = $params['arg'][1];
	$width = intval($width);
	$height = intval($height);
	$GLOBALS['imgFrame']->setWidth($width-15);
	$GLOBALS['imgFrame']->setHeight($height-90);
}

function gotoSlide($num) {
	global $myPid;

	if (vfs('real_fileExists', array(realpath(um('getCurrentUserDir') . '/tmp') . '/' . $myPid . '_' . basename($GLOBALS['filepath']->text) . '/img' . $num . '.jpg'))) {
		$myHidden = new Hidden(array(
			'name' => 'currentSlide',
			'father' => 'presentationWND',
			'text' => $num
		));
		eyeWidgets('serialize', array($myHidden));
		$GLOBALS['currentSlide'] = $myHidden;
	} else {
		eyex('messageBox', array('content' => 'You are already on the last slide and cannot go further anymore!'));
	}
}

function eyePresentation_on_Close(){
	proc('end');
}

?>